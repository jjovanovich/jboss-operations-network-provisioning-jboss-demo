<?xml version="1.0"?>
<project name="eap-6.2.0_jboss-profile" default="main" 
    xmlns:rhq="antlib:org.rhq.bundle"  xmlns:ac="antlib:net.sf.antcontrib">

	<!--	
	@@JBOSS_INSTANCE_NAME@@ : The main directory (within JBOSS_INSTANCES_HOME) of this bundle.
	@@JBOSS_CLUSTER_NAME_PREFIX@@ : The cluster name used by infispan to share information across JBoss nodes 
	@@JBOSS_ENGINE_HOME@@ - will be written into jboss-eap6.conf
	@@JBOSS_INSTANCES_HOME@@ - the home directory of all the jboss instances
	@@JBOSS_ADMIN_USER@@ - written into mgmt-users.properties
	@@JBOSS_ADMIN_PW@@ - will be encrypted and written into mgmt-users.properties (via linux script)
	@@JBOSS_MULTICAST_ADDRESS@@ - will be written into standalone.xml
	@@JBOSS_VAULT_HOME@@ - will be written into standalone.xml
	@@JBOSS_LOG_HOME@@ - only used in deploy.xml to create symlink
	@@JBOSS_DATA_HOME@@ - only used in deploy.xml to create symlink
	@@JBOSS_TOOLS_HOME@@ - only used in deploy.xml to get next slot and to add jboss password
	@@JBOSS_JVM_XMS@@ - will be written into jboss-eap6.conf
	@@JBOSS_JVM_XMX@@ - will be written into jboss-eap6.conf
	@@JBOSS_JVM_MAXPERMSIZE@@ - will be written into jboss-eap6.conf
	@@JBOSSDEPLOYMENT_LINUXUSER@@ - only used in deploy.xml to create appropriate rights on deployment file system (to be able to change the password manager)
	-->

	<rhq:bundle name="eap-6.2.0_jboss-profile" version="2014.04.24.11.20" description="eap-6.2.0_jboss-profile">
		<!-- properties -->
		<rhq:input-property name="JBOSS_INSTANCE_NAME" type="string" required="true"
			description="Instance name (ex.: dev1-poc1-01) "
			defaultValue="dev1-poc1-01" />
		<rhq:input-property name="JBOSS_CLUSTER_NAME_PREFIX" type="string" required="true"
			description="The cluster name, the -01 is stripped of off the JBOSS_INSTANCE_NAME and we have the cluster name (ex.: dev1-poc1) "
			defaultValue="dev1-poc1" />
		<rhq:input-property name="JBOSS_ENGINE_HOME" type="string" required="true"
			description="JBoss Home directory. It's where the jboss engine can be found (ex.: JBOSS_HOME/jboss-eap-engine 'file system link')"
			defaultValue="JBOSS_HOME/jboss-eap-engine" />
		<rhq:input-property name="JBOSS_INSTANCES_HOME" type="string" required="true"
			description="Base directory for the of the JBoss configurations you want to create (ex.: JBOSS_HOME/jboss-eap-instances)"
			defaultValue="JBOSS_HOME/jboss-eap-instances" />
		<rhq:input-property name="JBOSS_ADMIN_USER" type="string" required="true"
			description="The jonadmin user. Used by JON to access the http management port of JBoss."
			defaultValue="jonadmin" />
		<rhq:input-property name="JBOSS_ADMIN_PW" type="string" required="true"
			description="The password for jonadmin user."
			defaultValue="admin-123" />
		<rhq:input-property name="JBOSS_MULTICAST_ADDRESS" type="string" required="true"
			description="The multicast address used by JBoss"
			defaultValue="239.0.0.25" />
		<rhq:input-property name="JBOSS_VAULT_HOME" type="string" required="true"
			description="The vault home directory"
			defaultValue="JBOSS_HOME/jboss-eap-instances/dev1-poc1-01/vault/data" />
		<rhq:input-property name="JBOSS_LOG_HOME" type="string" required="true"
			description="The JBoss log directory"
			defaultValue="/srv/logs/jboss" />
		<rhq:input-property name="JBOSS_DATA_HOME" type="string" required="true"
			description="The JBoss data directory"
			defaultValue="/srv/data/jboss" />
		<rhq:input-property name="JBOSS_TOOLS_HOME" type="string" required="true"
			description="The path to the script location (jboss-slot-manager.sh and admin-user-manager.sh)"
			defaultValue="JBOSS_HOME/tools" />
		<rhq:input-property name="JBOSS_JVM_XMS" type="string" required="true"
             description="the jboss -Xms (minimum heap size) JVM value at startup"
             defaultValue="512m" />
		<rhq:input-property name="JBOSS_JVM_XMX" type="string" required="true"
             description="the jboss -Xmx (maximum heap size) JVM value at startup"
             defaultValue="512m" />
		<rhq:input-property name="JBOSS_JVM_MAXPERMSIZE" type="string" required="true"
             description="the jboss -XX:MaxPermSize (maximum perm size) JVM value at startup"
             defaultValue="256m" />
		<rhq:input-property name="JBOSSDEPLOYMENT_LINUXUSER" type="string" required="true"
			description="The linux user that has the right to ssh into the machine and slot and execute a script in the vault directory"
			defaultValue="usrjnk" />

		<!-- deployment unit -->
		<!-- the parameter "manageRootDir" is set to "true", meaning when you click "purge" in the JON GUI all data in /srv/jboss/jboss-eap-instances/<your-instance> will be deleted. This is a wanted bahavior.-->
		<rhq:deployment-unit name="jbossprofile" preinstallTarget="preinstall" postinstallTarget="postinstall" manageRootDir="true">
			<rhq:archive name="data.zip">
				<rhq:replace>
					<rhq:fileset>
						<include name="*.*"/>
						<include name="configuration/standalone.xml"/>
					</rhq:fileset>
				</rhq:replace>
			</rhq:archive>
		</rhq:deployment-unit>

	</rhq:bundle>

	<target name="main" />

	<target name="preinstall">

		<!-- the jboss-slot-manager.sh returns (via echo "xxx") the next available slot usrjbs01,usrjbs02,...usrjbs09 , if no slot available any more return value is "false" -->
		<exec executable="${JBOSS_TOOLS_HOME}/jboss-slot-manager.sh" outputproperty="NEXT_LINUX_SLOT" failonerror="true">
			<arg line="get-free-slot"/>
		</exec>
		<echo message="The next open slot is : ${NEXT_LINUX_SLOT}" />

		<fail message="No more physical slots available on machine">
			<condition>
				<equals arg1="${NEXT_LINUX_SLOT}" arg2="no-slot-available-on-machine" casesensitive="false" trim="true"/>
			</condition>
		</fail>

		<!-- remove potientially existing symlink before creating it in next step -->
		<delete file="${JBOSS_INSTANCES_HOME}/${JBOSS_INSTANCE_NAME}" followsymlinks="false" removenotfollowedsymlinks="true" failonerror="false"/>
		<!-- symlink ant tasks have "overwrite" set to "true", as the links might already exist on the system and should not make the bundle deployment fail -->
		<symlink link="${JBOSS_INSTANCES_HOME}/${JBOSS_INSTANCE_NAME}" resource="${NEXT_LINUX_SLOT}" overwrite="true" failonerror="false"/>

	</target>
	<target name="postinstall">

		<!-- log files are written via a symbolic link to a seperate file system -->
		<!-- try to create log directory on seperate file system -->
		<mkdir dir="${JBOSS_LOG_HOME}/${JBOSS_INSTANCE_NAME}"/>
		<!-- change the owner of the directory ${JBOSS_DATA_HOME}/${JBOSS_INSTANCE_NAME} from linux user JON to ${NEXT_LINUX_SLOT} -->
		<chown file="${JBOSS_LOG_HOME}/${JBOSS_INSTANCE_NAME}" owner="${NEXT_LINUX_SLOT}" />
		<symlink link="${JBOSS_INSTANCES_HOME}/${JBOSS_INSTANCE_NAME}/log" resource="${JBOSS_LOG_HOME}/${JBOSS_INSTANCE_NAME}" overwrite="true" failonerror="false"/>

		<!-- data files (input or output of an application process) are written via a symbolic link to a seperate file system -->
		<!-- try to create data directory on seperate file system -->
		<mkdir dir="${JBOSS_DATA_HOME}/${JBOSS_INSTANCE_NAME}"/>
		<!-- change the owner of the directory ${JBOSS_DATA_HOME}/${JBOSS_INSTANCE_NAME} from linux user JON to ${NEXT_LINUX_SLOT} -->
		<chown file="${JBOSS_DATA_HOME}/${JBOSS_INSTANCE_NAME}" owner="${NEXT_LINUX_SLOT}" />
		<symlink link="${JBOSS_INSTANCES_HOME}/${JBOSS_INSTANCE_NAME}/app-data" resource="${JBOSS_DATA_HOME}/${JBOSS_INSTANCE_NAME}" overwrite="true" failonerror="false"/>

		<!-- TODO redefine file access : this is quick and dirty -->
		<!-- Only linux user JON is allowed to read / execute those files -->
		<chmod perm="u+x">
			<fileset dir="${JBOSS_INSTANCES_HOME}/${JBOSS_INSTANCE_NAME}">
				<include name="jon-script-jboss-eap6.sh"/>
			</fileset>
		</chmod>
		<chmod perm="go-rwx">
			<fileset dir="${JBOSS_INSTANCES_HOME}/${JBOSS_INSTANCE_NAME}">
				<include name="jboss-eap6.conf"/>
				<include name="jboss-eap6.sh"/>
				<include name="jon-script-jboss-eap6.sh"/>
			</fileset>
		</chmod>
		<!-- Only users ${NEXT_LINUX_SLOT} and JON are allowed to read / write /execute the file -->
		<chmod perm="ug+rx">
			<fileset dir="${JBOSS_INSTANCES_HOME}/${JBOSS_INSTANCE_NAME}">
				<include name="jboss-eap6.sh"/>
				<include name="jboss-eap6.conf"/>
			</fileset>
		</chmod>
		
		<!-- Only users ${NEXT_LINUX_SLOT} and JON are allowed to read / write /execute the file -->
		<chmod perm="ug+rw">
			<fileset dir="${JBOSS_INSTANCES_HOME}/${JBOSS_INSTANCE_NAME}/configuration">
				<include name="mgmt-users.properties"/>
			</fileset>
		</chmod>
		<!-- the admin-user-manager.sh sets up the admin user that is used by JON to connect to the created JBoss -->
		<exec executable="${JBOSS_TOOLS_HOME}/admin-user-manager.sh" failonerror="true">
			<arg line=" ${NEXT_LINUX_SLOT} ${JBOSS_ADMIN_USER} ${JBOSS_ADMIN_PW}"/>
		</exec>

		<!-- starting JBoss after installation of the bundle -->
		<exec executable="${JBOSS_INSTANCES_HOME}/${JBOSS_INSTANCE_NAME}/jon-script-jboss-eap6.sh" spawn="true">
			<arg line="start"/>
		</exec>
		<property name="postinstallTargetExecuted" value="true"/>
	</target>
</project>